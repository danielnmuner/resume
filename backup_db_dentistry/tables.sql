-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.business_reference
(
    business_reference_id integer NOT NULL,
    business_reference character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT business_reference_pkey PRIMARY KEY (business_reference_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public.genre
(
    genre_id integer NOT NULL,
    genre character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT genre_pkey PRIMARY KEY (genre_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public.health_care_facility
(
    health_care_facility_id integer NOT NULL,
    health_care_facility character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT health_care_facility_pkey PRIMARY KEY (health_care_facility_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public.method_of_payment
(
    method_of_paymet_id integer NOT NULL,
    method_of_paymet character varying(30) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT method_of_payment_pkey PRIMARY KEY (method_of_paymet_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public.neighborhood
(
    neighborhood_id integer NOT NULL,
    neighborhood character varying(30) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT neighborhood_pkey PRIMARY KEY (neighborhood_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public.occupation
(
    occupation_id integer NOT NULL,
    occupation character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT occupation_pkey PRIMARY KEY (occupation_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public.patient
(
    patient_id bigint NOT NULL,
    f_name character varying(20) COLLATE pg_catalog."default",
    s_name character varying(20) COLLATE pg_catalog."default",
    f_last_name character varying(20) COLLATE pg_catalog."default",
    s_last_name character varying(20) COLLATE pg_catalog."default",
    type_of_id_id bigint,
    place_of_issuance character varying(100) COLLATE pg_catalog."default",
    date_of_birth date,
    genre_id integer,
    health_care_facility_id integer,
    occupation_id integer,
    address character varying(100) COLLATE pg_catalog."default",
    f_phone character varying(15) COLLATE pg_catalog."default",
    s_phone character varying(15) COLLATE pg_catalog."default",
    neighborhood_id integer,
    guardian_name character varying(15) COLLATE pg_catalog."default",
    guardian_last character varying(15) COLLATE pg_catalog."default",
    guardian_relationship character varying(15) COLLATE pg_catalog."default",
    guardian_id bigint,
    guardian_phone character varying(50) COLLATE pg_catalog."default",
    consultation_reason character varying(100) COLLATE pg_catalog."default",
    systemic_alert character varying(100) COLLATE pg_catalog."default",
    current_medications character varying(100) COLLATE pg_catalog."default",
    prenatal_history character varying(100) COLLATE pg_catalog."default",
    birth_history character varying(100) COLLATE pg_catalog."default",
    childhood_history character varying(100) COLLATE pg_catalog."default",
    allergic_history character varying(100) COLLATE pg_catalog."default",
    hemorrhagic_history character varying(100) COLLATE pg_catalog."default",
    work_history character varying(100) COLLATE pg_catalog."default",
    hospital_history character varying(100) COLLATE pg_catalog."default",
    drug_dependence character varying(100) COLLATE pg_catalog."default",
    surgical_history character varying(100) COLLATE pg_catalog."default",
    traumatic_history character varying(100) COLLATE pg_catalog."default",
    family_background character varying(100) COLLATE pg_catalog."default",
    what_background character varying(100) COLLATE pg_catalog."default",
    dental_history character varying(100) COLLATE pg_catalog."default",
    general_aspect character varying(100) COLLATE pg_catalog."default",
    extraoral_examination character varying(100) COLLATE pg_catalog."default",
    intraoral_examination character varying(100) COLLATE pg_catalog."default",
    observations character varying(100) COLLATE pg_catalog."default",
    oral_hygiene character varying(15) COLLATE pg_catalog."default",
    brushed_per_day integer,
    smoke character varying(10) COLLATE pg_catalog."default",
    dental_floss character varying(10) COLLATE pg_catalog."default",
    alcohol character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT patient_pkey PRIMARY KEY (patient_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public.patient_treatment
(
    patient_tratment_id integer NOT NULL DEFAULT nextval('patient_treatment_patient_tratment_id_seq'::regclass),
    treatment_id character varying(10) COLLATE pg_catalog."default",
    date date,
    hour time without time zone,
    patient_id bigint,
    CONSTRAINT patient_treatment_pkey PRIMARY KEY (patient_tratment_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public.proceed
(
    proceed_id integer NOT NULL,
    proceed character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT proceed_pkey PRIMARY KEY (proceed_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public.treatment
(
    treatment_id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    proceed_id integer,
    cost numeric(10, 2),
    method_of_payment_id integer,
    business_reference_id integer,
    material_expense numeric(10, 2),
    procedure_status character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT treatment_pkey PRIMARY KEY (treatment_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public.type_of_id
(
    type_of_id_id integer NOT NULL,
    type_of_id character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT type_of_id_pkey PRIMARY KEY (type_of_id_id)
)
WITH (
    OIDS = FALSE
);

ALTER TABLE IF EXISTS public.patient
    ADD CONSTRAINT patient_genre_id_fkey FOREIGN KEY (genre_id)
    REFERENCES public.genre (genre_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.patient
    ADD CONSTRAINT patient_health_care_facility_id_fkey FOREIGN KEY (health_care_facility_id)
    REFERENCES public.health_care_facility (health_care_facility_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.patient
    ADD CONSTRAINT patient_neighborhood_id_fkey FOREIGN KEY (neighborhood_id)
    REFERENCES public.neighborhood (neighborhood_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.patient
    ADD CONSTRAINT patient_occupation_id_fkey FOREIGN KEY (occupation_id)
    REFERENCES public.occupation (occupation_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.patient
    ADD CONSTRAINT patient_type_of_id_id_fkey FOREIGN KEY (type_of_id_id)
    REFERENCES public.type_of_id (type_of_id_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.patient_treatment
    ADD CONSTRAINT patient_treatment_patient_id_fkey FOREIGN KEY (patient_id)
    REFERENCES public.patient (patient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.patient_treatment
    ADD CONSTRAINT patient_treatment_treatment_id_fkey FOREIGN KEY (treatment_id)
    REFERENCES public.treatment (treatment_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.treatment
    ADD CONSTRAINT treatment_business_reference_id_fkey FOREIGN KEY (business_reference_id)
    REFERENCES public.business_reference (business_reference_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.treatment
    ADD CONSTRAINT treatment_method_of_payment_id_fkey FOREIGN KEY (method_of_payment_id)
    REFERENCES public.method_of_payment (method_of_paymet_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.treatment
    ADD CONSTRAINT treatment_proceed_id_fkey FOREIGN KEY (proceed_id)
    REFERENCES public.proceed (proceed_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;


